name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
  EXPO_PUBLIC_API_URL: ${{ secrets.EXPO_PUBLIC_API_URL }}
  EXPO_PUBLIC_WEBSOCKET_URL: ${{ secrets.EXPO_PUBLIC_WEBSOCKET_URL }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.3'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm ci

      - name: Run Expo Doctor
        run: npx expo doctor
        continue-on-error: true  # Since we know there are some warnings we want to handle

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: '8.13'

      - name: Run Expo Prebuild
        run: npx expo prebuild --platform android

      - name: Build Android Debug APK
        run: |
          cd android
          ./gradlew :app:assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: error

      # Optional: Add a step to check for outdated dependencies
      - name: Check for outdated dependencies
        run: npx expo install --check
        continue-on-error: true

      # Optional: Add a step to run linting
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      # Optional: Add a step to run type checking
      - name: Type Check
        run: npx tsc --noEmit
        continue-on-error: true 